// События - сигнал от браузера о том, что то произошло.
// Всякие клики, двойной клик например, наведение мыши или убрать мыш с элемента и тд

/*
*                                                              0 - Обработчик события  (Не юзабельные)
Перед тем как использовать событие, мы должны назначить оброботчик события
Обработчик события  - это функция которая срабатывает как только событие произошло

Есть 3 способа записать обработчик событий (НЕ ИСПОЛЬЗУЕТСЯ)
1) - напрямую в html коде добавляем на элемент
<button onclick="console.log('я гей')" class="btn">я гей первый</button>
записываем тегу button событие click с приставкой on и в ковычках пишем код
при нажатии на эту кнопку в консоль будет выводить текст - это и есть наш обработчик
 */
// 2) Использовать свойства DOM дерева. Сначала нам нужен элемент
const btn = document.querySelector('button');

    btn.onclick = function () { // обращаемся к нашему элементу и в свойство onclick записываем функцию
        console.log('hello');
    }; // но это тоже не используется, у него есть большая проблема
    // Если у вас большой код вы назначали обработчик, а потом забыли, что взаимодействовали с этим элементом
    // и вы назначали обработчик еще раз
    btn.onclick = function () { // обращаемся к нашему элементу и в свойство onclick записываем функцию
        console.log('hello world'); // - этот второй раз перезапишет первый обработчик и вы просто потеряете функционал

    };
// в реальном проекте вы можете забыть или даже не знать, что есть обработчик события. При этом иногда нужно обработчик удалить
// с таким синаксисом это не получится

/* 
*                                                       1 - Обработчик события( ИСТИНА СЫН В БУДУЩЕМ)
*/
//1)  addEventListener()

btn.addEventListener('click', () => { //  2 аргумента. 1 - событие(название события)  2 - колбек функция  
    console.log('Hello Dima');
});  // В общем js следит за этим элементом btn.addEventListener и если произощло событие нами написанное
// то срабатывает колбек функция(как мы помним, колбек функции выполняются строго за другими) в нашем случае после события
// так же если мы сделаем так
btn.addEventListener('click', () => {   
    console.log('Hello SEREGA'); // Наше действие не перезапишет предыдущее, они сработают по порядку
}); // 

// События в js выполняются в порядке очереди!

/*
*                                                   1.1 - НАЗВАНИЯ СОБЫТИЙ
*/

//1) click -  происходит, когда кликнули на элемент левой кнопкой мыши 
// (на устройствах с сенсорными экранами оно происходит при касании).
//2) mouseover / mouseout – когда мышь наводится на / покидает элемент.
//3) mousedown / mouseup – когда нажали / отжали кнопку мыши на элементе.
//4) mousemove – при движении мыши.
//5) mouseenter - при наведении мыщи на элемент