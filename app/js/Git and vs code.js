                    /* Команды для GIT 
(Так как я еще тупой, тут все своим языком, со временем буду все исправлять!)

git stash save -  помещает в карман изменения в рабочей среде до add и коммита
git stash apply-  возвращает посл запись из кармана!
git stash drop - удаляет посл запись из кармана!  




git checkout -b -  создать ветку и сразу переключиться на нее
git checkout "Ветка" - переключение между ветками!

git branch 'имя Ветки' - создание ветки.

то есть git checkout -b (имя ветки) - это тоже самое, что
если бы мы создали через branch Ветку,
а после переключились через checkout!



git add - добавляет содержимое рабочего каталога в индекс (staging area) для последующего коммита
git commit - берёт все данные, добавленные в индекс с помощью git add, и сохраняет их слепок во внутренней базе данных, 
а затем сдвигает указатель текущей ветки на этот слепок.

git merge - используется для слияния одной или нескольких веток в текущую.
Затем она устанавливает указатель текущей ветки на результирующий коммит.

git branch -d branch_name - Удаляет локальную ветку, если уже сделан её пуш и мердж:
git branch -D branch_name - Принудительно (force) удаляет локальную ветку, несмотря ни на что: (удаляй лок ветку находясь в другой ветке)
git push origin --delete stage - Теперь удалим такую же ветку из самого репозитория: (удобно удалять на самом гитхабе!) */




                                        /* VS CODE!!!

F2 - можно переименовать переменную в любом месте!! всю!!
cntrl + alt и стрелка вверх или низ - дублирует курсор!

программа setting Sync сохраняет плагины, если все по пизде пойдет, 
что бы не вспоминать и не загружать все по новой!
: Клавиши shift + alt + u - сохранаяет все! shift + alt + D - загружает все!
*/